<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:int-jme="http://www.springframework.org/schema/integration"
       
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
                http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
                http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd 
                http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
                http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd">


    <!-- Component scan to find all Spring components -->
     <context:component-scan base-package="com.sra.biotech.submittool" /> 
	 <util:properties id="submitProps" location="/WEB-INF/properties/submit.properties" /> 
 
    <task:annotation-driven />
    <bean id="submitScheduledTask" class="com.sra.biotech.submittool.schedulers.SubmitScheduledTask"></bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="order" value="1" />
        <property name="messageConverters">
            <list>
                <!-- Default converters -->
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
               <!--     <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" /> -->
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!-- Define a channel to communicate out to a JMS Destination -->
    <int:channel id="topicChannel"/>
    <!-- Define a channel to communicate out to a JMS Destination -->
    <int:channel id="topicDatabaseChannel"/>
     

    <!-- Define the ActiveMQ connection factory -->
    <bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616?wireFormat.maxInactivityDuration=0"/>
    </bean>

    <!--
        Define an adaptor that route topicChannel messages to the myTopic topic; the outbound-channel-adapter
        automagically fines the configured connectionFactory bean (by naming convention
      -->
    <int-jms:outbound-channel-adapter channel="topicChannel"
                                      destination-name="topic.SRA"
                                      pub-sub-domain="false" >
        
                                     
    </int-jms:outbound-channel-adapter>
                                 
    <int-jms:outbound-channel-adapter channel="topicDatabaseChannel"
                                      destination-name="topic.database"
                                      pub-sub-domain="false" >
   
        
    </int-jms:outbound-channel-adapter>
    <int:poller id="poller1" fixed-rate="300000"/> 
    <!-- Create a channel for a listener that will consume messages-->
    <int:channel id="listenerChannel" />
    <int:channel id="listenerDatabaseChannel" />

   
    <int-jms:message-driven-channel-adapter id="messageDrivenAdapter"
                                            channel="getPayloadChannel"
                                            destination-name="topic.SRA"
                                            pub-sub-domain="false" />
                                      
         
   <int-jms:message-driven-channel-adapter id="messageDrivenAdapterForDatabase"
                                            channel="getPayloadForDatabaseChannel"
                                            destination-name="topic.database"
                                            pub-sub-domain="false" />
         
    <int:channel id="getPayloadChannel" />
    <int:channel id="getPayloadForDatabaseChannel" /> 
    <int:service-activator input-channel="getPayloadChannel" output-channel="listenerChannel" ref="retrievePayloadServiceImpl" method="getPayload" />
    <int:service-activator input-channel="getPayloadForDatabaseChannel" output-channel="listenerDatabaseChannel" ref="retrievePayloadServiceImpl" method="getPayload" />
    
    <int:service-activator input-channel="listenerChannel" ref="messageListenerImpl" method="processMessage" />
    <int:service-activator input-channel="listenerDatabaseChannel" ref="databaseMessageListenerImpl" method="processMessage" />
     
     
    
</beans>
